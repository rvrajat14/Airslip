//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class BankResponse: APIModel {

    public var bankTypes: [BankTypeResponse]?

    public var icon: String?

    public var logo: String?

    public var name: String?

    public init(bankTypes: [BankTypeResponse]? = nil, icon: String? = nil, logo: String? = nil, name: String? = nil) {
        self.bankTypes = bankTypes
        self.icon = icon
        self.logo = logo
        self.name = name
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        bankTypes = try container.decodeArrayIfPresent("bankTypes")
        icon = try container.decodeIfPresent("icon")
        logo = try container.decodeIfPresent("logo")
        name = try container.decodeIfPresent("name")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(bankTypes, forKey: "bankTypes")
        try container.encodeIfPresent(icon, forKey: "icon")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(name, forKey: "name")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? BankResponse else { return false }
      guard self.bankTypes == object.bankTypes else { return false }
      guard self.icon == object.icon else { return false }
      guard self.logo == object.logo else { return false }
      guard self.name == object.name else { return false }
      return true
    }

    public static func == (lhs: BankResponse, rhs: BankResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
