//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class PromotionModel: APIModel {

    public var buttonText: String?

    public var buttonUrl: String?

    public var description: String?

    public var imageUrl: String?

    public var item: String?

    public init(buttonText: String? = nil, buttonUrl: String? = nil, description: String? = nil, imageUrl: String? = nil, item: String? = nil) {
        self.buttonText = buttonText
        self.buttonUrl = buttonUrl
        self.description = description
        self.imageUrl = imageUrl
        self.item = item
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        buttonText = try container.decodeIfPresent("buttonText")
        buttonUrl = try container.decodeIfPresent("buttonUrl")
        description = try container.decodeIfPresent("description")
        imageUrl = try container.decodeIfPresent("imageUrl")
        item = try container.decodeIfPresent("item")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(buttonText, forKey: "buttonText")
        try container.encodeIfPresent(buttonUrl, forKey: "buttonUrl")
        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(imageUrl, forKey: "imageUrl")
        try container.encodeIfPresent(item, forKey: "item")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PromotionModel else { return false }
      guard self.buttonText == object.buttonText else { return false }
      guard self.buttonUrl == object.buttonUrl else { return false }
      guard self.description == object.description else { return false }
      guard self.imageUrl == object.imageUrl else { return false }
      guard self.item == object.item else { return false }
      return true
    }

    public static func == (lhs: PromotionModel, rhs: PromotionModel) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
