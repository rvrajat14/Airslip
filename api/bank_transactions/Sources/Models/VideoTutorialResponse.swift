//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class VideoTutorialResponse: APIModel {

    public var description: String?

    public var links: [Link]?

    public var merchantName: String?

    public var url: String?

    public init(description: String? = nil, links: [Link]? = nil, merchantName: String? = nil, url: String? = nil) {
        self.description = description
        self.links = links
        self.merchantName = merchantName
        self.url = url
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        description = try container.decodeIfPresent("description")
        links = try container.decodeArrayIfPresent("links")
        merchantName = try container.decodeIfPresent("merchantName")
        url = try container.decodeIfPresent("url")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(links, forKey: "links")
        try container.encodeIfPresent(merchantName, forKey: "merchantName")
        try container.encodeIfPresent(url, forKey: "url")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? VideoTutorialResponse else { return false }
      guard self.description == object.description else { return false }
      guard self.links == object.links else { return false }
      guard self.merchantName == object.merchantName else { return false }
      guard self.url == object.url else { return false }
      return true
    }

    public static func == (lhs: VideoTutorialResponse, rhs: VideoTutorialResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
