//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ErrorResponse: APIModel {

    public var errorCode: String?

    public var links: [Link]?

    public var message: String?

    public var metadata: [String: Any]?

    public init(errorCode: String? = nil, links: [Link]? = nil, message: String? = nil, metadata: [String: Any]? = nil) {
        self.errorCode = errorCode
        self.links = links
        self.message = message
        self.metadata = metadata
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        errorCode = try container.decodeIfPresent("errorCode")
        links = try container.decodeArrayIfPresent("links")
        message = try container.decodeIfPresent("message")
        metadata = try container.decodeAnyIfPresent("metadata")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(errorCode, forKey: "errorCode")
        try container.encodeIfPresent(links, forKey: "links")
        try container.encodeIfPresent(message, forKey: "message")
        try container.encodeAnyIfPresent(metadata, forKey: "metadata")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ErrorResponse else { return false }
      guard self.errorCode == object.errorCode else { return false }
      guard self.links == object.links else { return false }
      guard self.message == object.message else { return false }
      guard NSDictionary(dictionary: self.metadata ?? [:]).isEqual(to: object.metadata ?? [:]) else { return false }
      return true
    }

    public static func == (lhs: ErrorResponse, rhs: ErrorResponse) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
